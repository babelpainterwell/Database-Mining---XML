"0","```r

# select a fixed value for origin(int) and conditions(int), which are foreign keys 
df.incidents <- sqldf::sqldf(\"select rid, flight_date as incidentdate, 1 as origin, airline, aircraft, flight_phase as flightphase, altitude_ft as altitude, 1 as conditions, pilot_warned_flag as warning from 'df.raw' \")
```"
"1","
Attaching package: ‘RSQLite’

The following object is masked from ‘package:RMySQL’:

    isIdCurrent

tcltk DLL is linked to '/opt/X11/lib/libX11.6.dylib'
"
"0","```r
# Manipulate on the data - change data types 
n.incidents <- nrow(df.incidents)

for (i in 1:n.incidents) {
  # manipulate on 'date'
  df.incidents$incidentdate[i] = strsplit(df.incidents$incidentdate[i], \" \")[[1]][1]
  
  # manipulate on 'warning'
  if (df.incidents$warning[i] == 'Y') {
    df.incidents$warning[i] = TRUE 
  }
  else {
    df.incidents$warning[i] = FALSE
  }
}

# Cast incident date into date data types 
# Cast origin, conditions and altitude_ft all into integer data types
df.incidents$incidentdate <- as.Date(df.incidents$incidentdate, format = \"%m/%d/%Y\")
df.incidents$origin <- as.integer(df.incidents$origin)
df.incidents$conditions <- as.integer(df.incidents$conditions)
df.incidents$altitude_ft < as.integer(df.incidents$altitude_ft)
```"
"1","logical(0)
"
"0","```r
# Note: Running this chunk code might pop out an error message like: tcltk DLL is linked to '/opt/X11/lib/libX11.6.dylib'. However, no negative impacts will be generated.

```"
